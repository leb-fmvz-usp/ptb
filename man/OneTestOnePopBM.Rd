% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OneTestOnePopBM.R
\name{OneTestOnePopBM}
\alias{OneTestOnePopBM}
\title{1 test and 1 population binomial model}
\usage{
OneTestOnePopBM(dataset, inits, priors, pars, n_iter = 10000,
  n_chains = 3, burn_in = 1000, thin = 1)
}
\arguments{
\item{dataset}{\code{\link{list}} with the population size and the number of positives. The names of these values must be "pop_size" and "positives" respectively.}

\item{inits}{\code{\link{list}} with initial conditions for chains. \code{inits} must define initial values for the true prevalence, the sensitivity and the specificity. The names of these values must be "true_prev", "se" and "sp" respectively.}

\item{priors}{\code{\link{vector}} with the parameters a and b (Beta distribution) for the true prevalence, the sensitivity and the specificity. The names of these values must be: "true_prev_a", "true_prev_b", "se_a", "se_b", "sp_a" and "sp_b".}

\item{pars}{character vector giving the names of parameters to be monitored. It is passed to the \code{variable.names} argument of the \code{\link{coda.samples}} function. In addition to the parameters specified in \code{inits}, the apparent prevalence and the positive and negative predictive values can be monitored if specified in \code{pars} as "app_prev", "ppv" and "npv", respectively.}

\item{n_iter}{number of iterations to monitor. It is passed to the \code{n.iter} argument of the \code{\link{coda.samples}} function.}

\item{n_chains}{the number of parallel chains for the model. It is passed to the \code{n.chains} argument of the \code{\link{jags.model}} function.}

\item{burn_in}{the number of iteration to be discarded. It is passed to the \code{n.iter} argument of the \code{\link{update.jags}} function.}

\item{thin}{thinning interval for monitors. It is passed to the \code{thin} argument of the \code{\link{coda.samples}} function.}
}
\value{
A \code{\link{list}} of class \code{mcmc.list}.
}
\description{
1 test and 1 population binomial model to estimate prevalence and diagnostic test related meassures.
}
\details{
This function creates a text file with the model and it is saved in the working directory.
}
\examples{
# Data.
dataset <- list(pop_size = 91, positives = 1)

# Initial conditions for chains.
inits <- list(list(true_prev = 0.05, se = 0.8, sp = 0.9),
              list(true_prev = 0.02, se = 0.3, sp = 0.7),
              list(true_prev = 0.09, se = 0.1, sp = 0.5))

# Priors.
priors <- c(true_prev_a = 1, true_prev_b = 1,
            se_a = 6.28, se_b = 13.32, sp_a = 212.12, sp_b = 3.13)

# Prevalence estimate.
prev_est <- OneTestOnePopBM(dataset = dataset, inits = inits, n_iter = 3e3,
                            priors = priors, pars = 'true_prev')

summary(prev_est)

# Diagnostic plots.
library(coda); library(ggmcmc)
gelman.diag(prev_est)
gelman.plot(prev_est)
gg_res <- ggs(prev_est)
ggs_traceplot(gg_res)
ggs_density(gg_res)
ggs_histogram(gg_res, bins = 100)
ggs_compare_partial(gg_res)
ggs_running(gg_res)
ggs_autocorrelation(gg_res)
}
\references{
https://dl.dropboxusercontent.com/u/49022/diagnostictests/index.html
}
